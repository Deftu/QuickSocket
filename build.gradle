plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "maven-publish"
    id "signing"
    id "java"
}

def signingPassword = findProperty("signing.password")
def centralRepoUsername = findProperty("publishing.mavencentral.username")
def centralRepoPassword = findProperty("publishing.mavencentral.password")

group = projectGroup
version = projectVersion

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin.
    implementation("org.jetbrains.kotlin:kotlin-stdlib")

    // Implementation.
    implementation("org.java-websocket:Java-WebSocket:1.5.2")
    implementation("com.google.code.gson:gson:2.8.9")

    // Testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    testImplementation("org.apache.logging.log4j:log4j-api:2.14.1")
    testImplementation("org.apache.logging.log4j:log4j-core:2.14.1")
    testImplementation("org.apache.logging.log4j:log4j-slf4j18-impl:2.14.1")
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = projectGroup
            artifactId = projectName
            version = projectVersion

            pom {
                name = projectName
                description = projectDescription
                url = projectGit

                licenses {
                    license {
                        name = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id = "deftu"
                        name = "Deftu"
                        email = "deftudev@gmail.com"
                    }
                }

                scm {
                    url = projectGit
                }
            }
        }
    }

    if (signingPassword != null && centralRepoUsername != null && centralRepoPassword != null) {
        repositories {
            maven {
                name = "MavenCentral"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = centralRepoUsername
                    password = centralRepoPassword
                }
            }
        }
    }
}

jar {
    from("LICENSE")
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives sourcesJar, javadocJar
}

if (signingPassword != null) {
    signing {
        sign publishing.publications.mavenJava
        sign configurations.archives
    }
}
